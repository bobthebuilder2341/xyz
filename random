import React from 'react';
import { render, screen } from '@testing-library/react';
import ConfidenceTimeGraph from '../../components/ConfidenceTimeGraph';
import { CommonConstants } from '../../common/CommonConstants';
import { Colors } from '../../common/constants/ColorConstants';
import { LineChart, Line, ResponsiveContainer } from 'recharts';

describe('ConfidenceTimeGraph Component', () => {
  const mockData = [
    { date: '2023-01-01', value: 10 },
    { date: '2023-02-01', value: 20 },
    { date: '2023-03-01', value: 30 },
  ];

  const mockVersionList = ['1.0', '1.1', '1.2'];

  it('renders without crashing', () => {
    render(<ConfidenceTimeGraph data={mockData} versionList={mockVersionList} />);
    expect(screen.getByTestId('confidence-time-graph')).toBeInTheDocument();
  });

  it('initializes `data` state with empty array', () => {
    const { result } = render(<ConfidenceTimeGraph data={[]} versionList={[]} />);
    expect(result.current.data).toEqual([]);
  });

  it('updates `data` state when `props.data` changes', () => {
    const { rerender } = render(<ConfidenceTimeGraph data={[]} versionList={[]} />);
    rerender(<ConfidenceTimeGraph data={mockData} versionList={mockVersionList} />);
    expect(screen.getByTestId('confidence-time-graph')).toBeInTheDocument();
  });

  it('formats X-axis labels correctly with CustomXAxisTick', () => {
    render(<ConfidenceTimeGraph data={mockData} versionList={mockVersionList} />);
    
    const xAxisTickLabels = screen.getAllByTestId('x-axis-tick');
    expect(xAxisTickLabels[0].textContent).toBe('Jan 2023');
    expect(xAxisTickLabels[1].textContent).toBe('Feb 2023');
    expect(xAxisTickLabels[2].textContent).toBe('Mar 2023');
  });
});
